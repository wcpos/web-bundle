name: Tag and Release

on:
  push:
    branches:
      - main

jobs:
  tag-new-versions:
    name: Tag
    runs-on: ubuntu-latest
    outputs:
      id: ${{ steps.maybe-release.outputs.id }}
      tag: ${{ steps.maybe-tag.outputs.tag }}
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Detect and Tag New Version
        id: maybe-tag
        uses: salsify/action-detect-and-tag-new-version@v2

      - name: Create Release
        id: maybe-release
        if: ${{ success() && steps.maybe-tag.outputs.tag }}
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ steps.maybe-tag.outputs.tag }}
          tag_name: ${{ steps.maybe-tag.outputs.tag }}
          draft: true

      - name: Upload metadata.json
        if: ${{ success() && steps.maybe-tag.outputs.tag }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.maybe-release.outputs.upload_url }}
          asset_path: ./metadata.json
          asset_name: metadata.json
          asset_content_type: application/json

      - name: Upload Bundle Files
        if: ${{ success() && steps.maybe-tag.outputs.tag }}
        run: |
          for file in ./bundles/*; do
            echo "Uploading ${file}..."
            FILE_NAME=$(basename "${file}")
            MIME_TYPE=$(file -b --mime-type "${file}")
            UPLOAD_URL="${{ steps.maybe-release.outputs.upload_url }}?name=${FILE_NAME}"
            RESPONSE=$(curl --write-out "%{http_code}" --silent --output /dev/null -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -H "Content-Type: ${MIME_TYPE}" --data-binary @"${file}" "${UPLOAD_URL}")
            if [ "$RESPONSE" -ne 201 ]; then
              echo "Error uploading ${FILE_NAME}: HTTP ${RESPONSE}"
              exit 1
            fi
            echo "Uploaded ${FILE_NAME}"
          done
